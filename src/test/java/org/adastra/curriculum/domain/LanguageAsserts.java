package org.adastra.curriculum.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class LanguageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageAllPropertiesEquals(Language expected, Language actual) {
        assertLanguageAutoGeneratedPropertiesEquals(expected, actual);
        assertLanguageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageAllUpdatablePropertiesEquals(Language expected, Language actual) {
        assertLanguageUpdatableFieldsEquals(expected, actual);
        assertLanguageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageAutoGeneratedPropertiesEquals(Language expected, Language actual) {
        assertThat(actual)
            .as("Verify Language auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageUpdatableFieldsEquals(Language expected, Language actual) {
        assertThat(actual)
            .as("Verify Language relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getExpertise()).as("check expertise").isEqualTo(expected.getExpertise()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertLanguageUpdatableRelationshipsEquals(Language expected, Language actual) {
        assertThat(actual)
            .as("Verify Language relationships")
            .satisfies(a -> assertThat(a.getBiography()).as("check biography").isEqualTo(expected.getBiography()));
    }
}
