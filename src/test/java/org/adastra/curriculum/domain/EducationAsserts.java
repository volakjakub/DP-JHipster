package org.adastra.curriculum.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EducationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEducationAllPropertiesEquals(Education expected, Education actual) {
        assertEducationAutoGeneratedPropertiesEquals(expected, actual);
        assertEducationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEducationAllUpdatablePropertiesEquals(Education expected, Education actual) {
        assertEducationUpdatableFieldsEquals(expected, actual);
        assertEducationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEducationAutoGeneratedPropertiesEquals(Education expected, Education actual) {
        assertThat(actual)
            .as("Verify Education auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEducationUpdatableFieldsEquals(Education expected, Education actual) {
        assertThat(actual)
            .as("Verify Education relevant properties")
            .satisfies(a -> assertThat(a.getSchool()).as("check school").isEqualTo(expected.getSchool()))
            .satisfies(a -> assertThat(a.getType()).as("check type").isEqualTo(expected.getType()))
            .satisfies(a -> assertThat(a.getStart()).as("check start").isEqualTo(expected.getStart()))
            .satisfies(a -> assertThat(a.getEnd()).as("check end").isEqualTo(expected.getEnd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEducationUpdatableRelationshipsEquals(Education expected, Education actual) {
        assertThat(actual)
            .as("Verify Education relationships")
            .satisfies(a -> assertThat(a.getBiography()).as("check biography").isEqualTo(expected.getBiography()));
    }
}
